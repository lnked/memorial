var app = app || {};

(function(body){
    "use strict";

    app = {
        
        initPopup: function()
        {
            $.popup.init('.j-open-popup', {
                cssPosition: false,
                wrapper: '.layout-wrapper'
            });
        },
        
        warning: function() {
            $('body').on('click', function(e){
                if ($('.j-warning-block._open').length) {
                    if (!$(e.target).closest('.j-warning-block').length && !$(e.target).hasClass('.j-warning-block')) {
                        $('.j-warning-block._open').removeClass('_open');
                    }
                }
            });

            $('body').on('click', '.j-warning-trigger', function(){
                $(this).closest('.j-warning-block').toggleClass('_open');
            });
        },

        init: function() {
            this.initPopup();
            this.warning();
            this.map.init();
            this.tabs.init();
            this.gallery.init();
        }

    };

})(document.body);
var app = app || {};

(function(body){
    "use strict";

    app.faq = {

        init: function() {
            $('body').on('click', '.j-faq-trigger', function(e){
                e.preventDefault();

                var $faq = $(this).closest('.j-faq');
                $faq.toggleClass('_open');

                return !1;
            });
        }

    };

})(document.body);
var app = app || {};

(function(body){
    "use strict";

    app.gallery = {

        init: function() {
            $('.j-gallery').magnificPopup({
                type: 'image',
                delegate: 'a.zoom',
                removalDelay: 500,
                fixedContentPos: false,
                closeOnBgClick: true,
                gallery: {
                    enabled: true
                },
                callbacks: {
                     open: function() {
                        $('body').addClass('noscroll');
                     },
                     close: function() {
                         $('body').removeClass('noscroll');
                     }
                }
            });
        }

    };

})(document.body);
var app = app || {};

(function(body){
    "use strict";

    app.map = {
        
        _mapObject: null,

        _geoObject: null,

        getData: function($element) {
            var x, wrap_id = null, coords = null;

            if ($element.data('coords')) {
                coords = $element.data('coords').split(',');

                for (x in coords) {
                    coords[x] = $.trim(coords[x]);
                }

                if (coords.length !== 2) {
                    coords = null;
                }
            }

            if ($element.attr('id')) {
                wrap_id = $element.attr('id');
            }

            return {
                id: wrap_id,
                coords: coords
            }
        },

        drowMap: function($element) {
            
            var that = this, data = this.getData($element);

            ymaps.ready(function(){

                that._mapObject = new ymaps.Map(data.id, {
                    center: [data.coords[0], data.coords[1]],
                    zoom: 13,
                    controls: ['smallMapDefaultSet']
                });

                that._mapObject.behaviors.disable('scrollZoom');

                that._mapObject.controls.get('zoomControl').options.set('size', 'small');
                that._mapObject.controls.get('zoomControl').options.set('position', { right: 10, top: 50 });

                that._mapObject.geoObjects
                    .add(new ymaps.Placemark([data.coords[0], data.coords[1]], {}, {
                        preset: 'islands#dotIcon',
                        iconColor: '#1e98ff'
                    }))

            });

        },

        init: function() {
            var that = this;
            if ($('.j-map').length) {
                $('.j-map').each(function(){
                    that.drowMap($(this));
                });
            }
        }

    };

})(document.body);
var app = app || {};

(function(body){
    "use strict";

    app.tabs = {

        init: function() {
            var $wrapper = null, tab = '';

            $('body').on('click', '.j-tab-trigger', function(e){
                e.preventDefault();

                if (!$(this).hasClass('_open')) {
                    tab = $(this).data('tab');

                    $wrapper = $(this).closest('.j-tab-wrapper');

                    $wrapper.find('.j-tab-trigger').removeClass('_current');
                    $wrapper.find('.j-tab-item').removeClass('_open');

                    $wrapper.find('#tab-'+tab).addClass('_open');
                    $(this).addClass('_current');
                }

                return !1;
            });
        }

    };

})(document.body);
var app = app || {};

(function(body){
    "use strict";

    app.zoom = {

        init: function() {
            var $image = null, src = '';

            $('.j-preview').on('click', function(e) {
                e.preventDefault();

                src = $.trim($(this).attr('href'));

                if (src !== '' && !$(this).hasClass('_current')) {
                    $image = $(this).closest('.j-zoom').find('.j-zoom-image');
                    
                    $image.html([
                        '<a href="', src ,'" class="product-item__preview__zoom__image" itemprop="image">',
                            '<img src="', src ,'" itemprop="contentUrl" alt="image name">',
                        '</a>'
                    ].join(''));

                    $('.j-preview').removeClass('_current');

                    $(this).addClass('_current');
                }

                return false;
            });
        }

    };

})(document.body);
"use strict";

function sprintf(v) {
  var split = v.toString().split('.'), pad = "00", time = [], x = null;

  for (x in split) {
    time.push(pad.substring(0, 2 - split[x].toString().length) + split[x]);
  }

  return time.join('.');
}
$(document).ready(function() {
    app.init();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLmpzIiwiX2FwcC5mYXEuanMiLCJfYXBwLmdhbGxlcnkuanMiLCJfYXBwLm1hcC5qcyIsIl9hcHAudGFicy5qcyIsIl9hcHAuem9vbS5qcyIsIl9mdW5jdGlvbnMuanMiLCJpbml0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDdkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMxRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQy9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNuQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1ZBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFwcCB8fCB7fTtcblxuKGZ1bmN0aW9uKGJvZHkpe1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwID0ge1xuICAgICAgICBcbiAgICAgICAgaW5pdFBvcHVwOiBmdW5jdGlvbigpXG4gICAgICAgIHtcbiAgICAgICAgICAgICQucG9wdXAuaW5pdCgnLmotb3Blbi1wb3B1cCcsIHtcbiAgICAgICAgICAgICAgICBjc3NQb3NpdGlvbjogZmFsc2UsXG4gICAgICAgICAgICAgICAgd3JhcHBlcjogJy5sYXlvdXQtd3JhcHBlcidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBcbiAgICAgICAgd2FybmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCdib2R5Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICAgICAgaWYgKCQoJy5qLXdhcm5pbmctYmxvY2suX29wZW4nKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkKGUudGFyZ2V0KS5jbG9zZXN0KCcuai13YXJuaW5nLWJsb2NrJykubGVuZ3RoICYmICEkKGUudGFyZ2V0KS5oYXNDbGFzcygnLmotd2FybmluZy1ibG9jaycpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcuai13YXJuaW5nLWJsb2NrLl9vcGVuJykucmVtb3ZlQ2xhc3MoJ19vcGVuJyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJCgnYm9keScpLm9uKCdjbGljaycsICcuai13YXJuaW5nLXRyaWdnZXInLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICQodGhpcykuY2xvc2VzdCgnLmotd2FybmluZy1ibG9jaycpLnRvZ2dsZUNsYXNzKCdfb3BlbicpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aGlzLmluaXRQb3B1cCgpO1xuICAgICAgICAgICAgdGhpcy53YXJuaW5nKCk7XG4gICAgICAgICAgICB0aGlzLm1hcC5pbml0KCk7XG4gICAgICAgICAgICB0aGlzLnRhYnMuaW5pdCgpO1xuICAgICAgICAgICAgdGhpcy5nYWxsZXJ5LmluaXQoKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxufSkoZG9jdW1lbnQuYm9keSk7IiwidmFyIGFwcCA9IGFwcCB8fCB7fTtcblxuKGZ1bmN0aW9uKGJvZHkpe1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwLmZhcSA9IHtcblxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJ2JvZHknKS5vbignY2xpY2snLCAnLmotZmFxLXRyaWdnZXInLCBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICB2YXIgJGZhcSA9ICQodGhpcykuY2xvc2VzdCgnLmotZmFxJyk7XG4gICAgICAgICAgICAgICAgJGZhcS50b2dnbGVDbGFzcygnX29wZW4nKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG59KShkb2N1bWVudC5ib2R5KTsiLCJ2YXIgYXBwID0gYXBwIHx8IHt9O1xuXG4oZnVuY3Rpb24oYm9keSl7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICBhcHAuZ2FsbGVyeSA9IHtcblxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5qLWdhbGxlcnknKS5tYWduaWZpY1BvcHVwKHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnaW1hZ2UnLFxuICAgICAgICAgICAgICAgIGRlbGVnYXRlOiAnYS56b29tJyxcbiAgICAgICAgICAgICAgICByZW1vdmFsRGVsYXk6IDUwMCxcbiAgICAgICAgICAgICAgICBmaXhlZENvbnRlbnRQb3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNsb3NlT25CZ0NsaWNrOiB0cnVlLFxuICAgICAgICAgICAgICAgIGdhbGxlcnk6IHtcbiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzOiB7XG4gICAgICAgICAgICAgICAgICAgICBvcGVuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcygnbm9zY3JvbGwnKTtcbiAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICBjbG9zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdub3Njcm9sbCcpO1xuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG59KShkb2N1bWVudC5ib2R5KTsiLCJ2YXIgYXBwID0gYXBwIHx8IHt9O1xuXG4oZnVuY3Rpb24oYm9keSl7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICBhcHAubWFwID0ge1xuICAgICAgICBcbiAgICAgICAgX21hcE9iamVjdDogbnVsbCxcblxuICAgICAgICBfZ2VvT2JqZWN0OiBudWxsLFxuXG4gICAgICAgIGdldERhdGE6IGZ1bmN0aW9uKCRlbGVtZW50KSB7XG4gICAgICAgICAgICB2YXIgeCwgd3JhcF9pZCA9IG51bGwsIGNvb3JkcyA9IG51bGw7XG5cbiAgICAgICAgICAgIGlmICgkZWxlbWVudC5kYXRhKCdjb29yZHMnKSkge1xuICAgICAgICAgICAgICAgIGNvb3JkcyA9ICRlbGVtZW50LmRhdGEoJ2Nvb3JkcycpLnNwbGl0KCcsJyk7XG5cbiAgICAgICAgICAgICAgICBmb3IgKHggaW4gY29vcmRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvb3Jkc1t4XSA9ICQudHJpbShjb29yZHNbeF0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChjb29yZHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvb3JkcyA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoJGVsZW1lbnQuYXR0cignaWQnKSkge1xuICAgICAgICAgICAgICAgIHdyYXBfaWQgPSAkZWxlbWVudC5hdHRyKCdpZCcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGlkOiB3cmFwX2lkLFxuICAgICAgICAgICAgICAgIGNvb3JkczogY29vcmRzXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgZHJvd01hcDogZnVuY3Rpb24oJGVsZW1lbnQpIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzLCBkYXRhID0gdGhpcy5nZXREYXRhKCRlbGVtZW50KTtcblxuICAgICAgICAgICAgeW1hcHMucmVhZHkoZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgICAgIHRoYXQuX21hcE9iamVjdCA9IG5ldyB5bWFwcy5NYXAoZGF0YS5pZCwge1xuICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IFtkYXRhLmNvb3Jkc1swXSwgZGF0YS5jb29yZHNbMV1dLFxuICAgICAgICAgICAgICAgICAgICB6b29tOiAxMyxcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbHM6IFsnc21hbGxNYXBEZWZhdWx0U2V0J11cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHRoYXQuX21hcE9iamVjdC5iZWhhdmlvcnMuZGlzYWJsZSgnc2Nyb2xsWm9vbScpO1xuXG4gICAgICAgICAgICAgICAgdGhhdC5fbWFwT2JqZWN0LmNvbnRyb2xzLmdldCgnem9vbUNvbnRyb2wnKS5vcHRpb25zLnNldCgnc2l6ZScsICdzbWFsbCcpO1xuICAgICAgICAgICAgICAgIHRoYXQuX21hcE9iamVjdC5jb250cm9scy5nZXQoJ3pvb21Db250cm9sJykub3B0aW9ucy5zZXQoJ3Bvc2l0aW9uJywgeyByaWdodDogMTAsIHRvcDogNTAgfSk7XG5cbiAgICAgICAgICAgICAgICB0aGF0Ll9tYXBPYmplY3QuZ2VvT2JqZWN0c1xuICAgICAgICAgICAgICAgICAgICAuYWRkKG5ldyB5bWFwcy5QbGFjZW1hcmsoW2RhdGEuY29vcmRzWzBdLCBkYXRhLmNvb3Jkc1sxXV0sIHt9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZXQ6ICdpc2xhbmRzI2RvdEljb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWNvbkNvbG9yOiAnIzFlOThmZidcbiAgICAgICAgICAgICAgICAgICAgfSkpXG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoJCgnLmotbWFwJykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgJCgnLmotbWFwJykuZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICB0aGF0LmRyb3dNYXAoJCh0aGlzKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH07XG5cbn0pKGRvY3VtZW50LmJvZHkpOyIsInZhciBhcHAgPSBhcHAgfHwge307XG5cbihmdW5jdGlvbihib2R5KXtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGFwcC50YWJzID0ge1xuXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyICR3cmFwcGVyID0gbnVsbCwgdGFiID0gJyc7XG5cbiAgICAgICAgICAgICQoJ2JvZHknKS5vbignY2xpY2snLCAnLmotdGFiLXRyaWdnZXInLCBmdW5jdGlvbihlKXtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoJ19vcGVuJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFiID0gJCh0aGlzKS5kYXRhKCd0YWInKTtcblxuICAgICAgICAgICAgICAgICAgICAkd3JhcHBlciA9ICQodGhpcykuY2xvc2VzdCgnLmotdGFiLXdyYXBwZXInKTtcblxuICAgICAgICAgICAgICAgICAgICAkd3JhcHBlci5maW5kKCcuai10YWItdHJpZ2dlcicpLnJlbW92ZUNsYXNzKCdfY3VycmVudCcpO1xuICAgICAgICAgICAgICAgICAgICAkd3JhcHBlci5maW5kKCcuai10YWItaXRlbScpLnJlbW92ZUNsYXNzKCdfb3BlbicpO1xuXG4gICAgICAgICAgICAgICAgICAgICR3cmFwcGVyLmZpbmQoJyN0YWItJyt0YWIpLmFkZENsYXNzKCdfb3BlbicpO1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdfY3VycmVudCcpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG59KShkb2N1bWVudC5ib2R5KTsiLCJ2YXIgYXBwID0gYXBwIHx8IHt9O1xuXG4oZnVuY3Rpb24oYm9keSl7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICBhcHAuem9vbSA9IHtcblxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciAkaW1hZ2UgPSBudWxsLCBzcmMgPSAnJztcblxuICAgICAgICAgICAgJCgnLmotcHJldmlldycpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBzcmMgPSAkLnRyaW0oJCh0aGlzKS5hdHRyKCdocmVmJykpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHNyYyAhPT0gJycgJiYgISQodGhpcykuaGFzQ2xhc3MoJ19jdXJyZW50JykpIHtcbiAgICAgICAgICAgICAgICAgICAgJGltYWdlID0gJCh0aGlzKS5jbG9zZXN0KCcuai16b29tJykuZmluZCgnLmotem9vbS1pbWFnZScpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJGltYWdlLmh0bWwoW1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxhIGhyZWY9XCInLCBzcmMgLCdcIiBjbGFzcz1cInByb2R1Y3QtaXRlbV9fcHJldmlld19fem9vbV9faW1hZ2VcIiBpdGVtcHJvcD1cImltYWdlXCI+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGltZyBzcmM9XCInLCBzcmMgLCdcIiBpdGVtcHJvcD1cImNvbnRlbnRVcmxcIiBhbHQ9XCJpbWFnZSBuYW1lXCI+JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICc8L2E+J1xuICAgICAgICAgICAgICAgICAgICBdLmpvaW4oJycpKTtcblxuICAgICAgICAgICAgICAgICAgICAkKCcuai1wcmV2aWV3JykucmVtb3ZlQ2xhc3MoJ19jdXJyZW50Jyk7XG5cbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnX2N1cnJlbnQnKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxufSkoZG9jdW1lbnQuYm9keSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIHNwcmludGYodikge1xuICB2YXIgc3BsaXQgPSB2LnRvU3RyaW5nKCkuc3BsaXQoJy4nKSwgcGFkID0gXCIwMFwiLCB0aW1lID0gW10sIHggPSBudWxsO1xuXG4gIGZvciAoeCBpbiBzcGxpdCkge1xuICAgIHRpbWUucHVzaChwYWQuc3Vic3RyaW5nKDAsIDIgLSBzcGxpdFt4XS50b1N0cmluZygpLmxlbmd0aCkgKyBzcGxpdFt4XSk7XG4gIH1cblxuICByZXR1cm4gdGltZS5qb2luKCcuJyk7XG59IiwiJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgYXBwLmluaXQoKTtcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
