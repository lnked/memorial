var app = app || {};

(function(body){
    "use strict";

    app = {
        
        init: function() {
            this.map.init();
        }

    };

})(document.body);
var app = app || {};

(function(body){
    "use strict";

    app.map = {
        
        init: function() {
            alert("map");
        }

    };

})(document.body);
;(function ($) {
    "use strict";

    $.app = $.app || {};

    var _this;

    $.app.sandwich = {

        config: {
            keyHooks: !1,
            selector: '.js-sandwich-menu',
            wrapper: '.layout-wrapper',
            overlay: '.overlay'
        },

        extend: function(config)
        {
            _this = this;

            if (typeof config !== 'undefined')
            {
                var x;
                for (x in config)
                {
                    if (typeof _this.config[x] !== 'undefined')
                        _this.config[x] = config[x];
                }
            }
        },

        isOpen: function()
        {
            return body.hasClass('page-visible');
        },

        hide: function()
        {
            body.removeClass('page-open');

            setTimeout(function(){
                body.removeClass('page-visible');
            }, 10);

            $(this.config.overlay).css({
                'visibility': 'hidden'
            });
        },

        toggle: function()
        {
            if (body.hasClass('page-visible'))
            {
                setTimeout(function(){
                    body.removeClass('page-visible');
                }, 10);
            }
            else
            {
                setTimeout(function(){
                    body.addClass('page-visible');
                }, 10);
            }

            body.toggleClass('page-open');

            var visibility = 'visible';

            if (!body.hasClass('page-open'))
            {
                visibility = 'hidden'
            }
            
            $(_this.config.overlay).css({
                'visibility': visibility
            });
        },

        sandwichTrigger: function()
        {
            _this = this;

            if (_this.config.keyHooks)
            {
                body.on('keydown', function(e) {
                    if(e.keyCode == 27 && _this.isOpen())
                    {
                        _this.toggle();
                    }
                });
            };

            body.on('click', _this.config.selector, function(e){
                e.preventDefault ? e.preventDefault() : e.returnValue = false;
                _this.toggle();
            });
        },

        overlayTrigger: function()
        {
            _this = this;

            body.on('click', _this.config.overlay, function(e){
                _this.hide();
            });
        },

        init: function(config)
        {
            this.extend(config);
            
            this.sandwichTrigger();
            this.overlayTrigger();
        }

    };

})(jQuery);
 
"use strict";

function updateCaptcha(selector) {
    if ($(selector).length) {
        var src = $(selector).attr('src').split('?')[0];
        $(selector).attr('src', src + '?' + Math.random());
    }
}

function lockScroll(element) {
    var lockX, lockY, events = ['scroll', 'mousewheel', 'touchmove'], keys = {37: 1, 38: 1, 39: 1, 40: 1};

    function preventDefault(e) {
        e = e || window.event;
        if (e.preventDefault)
          e.preventDefault();
        e.returnValue = false;  
    }

    function preventDefaultForScrollKeys(e) {
        if (keys[e.keyCode]) {
            preventDefault(e);
            return false;
        }
    }

    function disableScroll() {
        if (window.addEventListener) // older FF
            window.addEventListener('DOMMouseScroll', preventDefault, false);
        window.onwheel = preventDefault; // modern standard
        window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE
        window.ontouchmove  = preventDefault; // mobile
        document.onkeydown  = preventDefaultForScrollKeys;
    }

    function enableScroll() {
        if (window.removeEventListener)
            window.removeEventListener('DOMMouseScroll', preventDefault, false);
        window.onmousewheel = document.onmousewheel = null; 
        window.onwheel = null; 
        window.ontouchmove = null;  
        document.onkeydown = null;  
    }

    // function disableScrolling(){
    //     var x=window.scrollX;
    //     var y=window.scrollY;
    //     window.onscroll=function(){window.scrollTo(x, y);};
    // }

    // function enableScrolling(){
    //     window.onscroll=function(){};
    // }

    // function disable_scroll() {
    //    ...
    //    document.ontouchmove = function(e){ 
    //         e.preventDefault(); 
    //    }
    // }

    // function enable_scroll() {
    //    ...
    //    document.ontouchmove = function(e){ 
    //      return true; 
    //    }
    // }



    // element = document.getElementById(element);

    // e.preventDefault ? e.preventDefault() : e.returnValue = false;

    // element.addEventListener('mousewheel', function(e) {
    //     e.preventDefault();
    // }, false);

    // element.addEventListener('touchmove', function(e) {
    //     e.preventDefault();
    // }, false);

    // lockX = window.scrollX;
    // lockY = window.scrollY;

    // function lockIt() {
    //     window.scrollTo(lockX,lockY);
    //     return false;
    // }

    // window.addEventListener("scroll",lockIt,false)

    // return {
    //     stop: function(){
    //         window.removeEventListener("scroll",lockIt,false)
    //     }
    // }
}

// document.addEventListener('ontouchstart', function(e) {
//     document.body.style.overflow = "hidden";
// }, false);

// document.addEventListener('ontouchmove', function(e) {
//     document.body.style.overflow = "auto";
// }, false);

// document.addEventListener('ontouchstart', function(e) {e.preventDefault()}, false);
// document.addEventListener('ontouchmove', function(e) {e.preventDefault()}, false);

// var locker = lockScroll(); // locks scrolling
// locker.stop();  // unlocks scrolling

// $('#element').on('scroll touchmove mousewheel', function(e){
//   e.preventDefault();
//   e.stopPropagation();
//   return false;
// })


// var trapScroll;

// (function($){
  
//   trapScroll = function(opt){
    
//     var trapElement;
//     var scrollableDist;
//     var trapClassName = 'trapScroll-enabled';
//     var trapSelector = '.trapScroll';
    
//     var trapWheel = function(e){
      
//       if (!$('body').hasClass(trapClassName)) {
        
//         return;
        
//       } else {  
        
//         var curScrollPos = trapElement.scrollTop();
//         var wheelEvent = e.originalEvent;
//         var dY = wheelEvent.deltaY;

//         // only trap events once we've scrolled to the end
//         // or beginning
//         if ((dY>0 && curScrollPos >= scrollableDist) ||
//             (dY<0 && curScrollPos <= 0)) {

//           opt.onScrollEnd();
//           return false;
          
//         }
        
//       }
      
//     }
    
//     $(document)
//       .on('wheel', trapWheel)
//       .on('mouseleave', trapSelector, function(){
        
//         $('body').removeClass(trapClassName);
      
//       })
//       .on('mouseenter', trapSelector, function(){   
      
//         trapElement = $(this);
//         var containerHeight = trapElement.outerHeight();
//         var contentHeight = trapElement[0].scrollHeight; // height of scrollable content
//         scrollableDist = contentHeight - containerHeight;
        
//         if (contentHeight>containerHeight)
//           $('body').addClass(trapClassName); 
      
//       });       
//   }
// })($);

// var preventedCount = 0;
// var showEventPreventedMsg = function(){  
//   $('#mousewheel-prevented').stop().animate({opacity: 1}, 'fast');
// }
// var hideEventPreventedMsg = function(){
//   $('#mousewheel-prevented').stop().animate({opacity: 0}, 'fast');
// }
// var addPreventedCount = function(){
//   $('#prevented-count').html('prevented <small>x</small>' + preventedCount++);
// }

// trapScroll({ onScrollEnd: addPreventedCount });
// $('.trapScroll')
//   .on('mouseenter', showEventPreventedMsg)
//   .on('mouseleave', hideEventPreventedMsg);      
// $('[id*="parent"]').scrollTop(100);

var isJson = function(item) {
    item = typeof item !== "string" ? JSON.stringify(item) : item;

    try {
        item = JSON.parse(item);
    }
    catch (e) {
        return false;
    }

    if (typeof item === "object" && item !== null) {
        return true;
    }

    return false;
}

String.prototype.toHHMMSS = function () {
    var sec_num = parseInt(this, 10); // don't forget the second param
    var hours   = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = sec_num - (hours * 3600) - (minutes * 60);

    if (hours   < 10) {hours   = "0"+hours;}
    if (minutes < 10) {minutes = "0"+minutes;}
    if (seconds < 10) {seconds = "0"+seconds;}
    return hours+':'+minutes+':'+seconds;
}

$(document).ready(function() {
    app.init();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9fYXBwLmpzIiwiX2FwcC5tYXAuanMiLCJfYXBwLnNhbmR3aWNoLmpzIiwiX2Z1bmN0aW9ucy5qcyIsImluaXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDdEhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUMvTkE7QUFDQTtBQUNBIiwiZmlsZSI6Il8ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFwcCB8fCB7fTtcblxuKGZ1bmN0aW9uKGJvZHkpe1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgYXBwID0ge1xuICAgICAgICBcbiAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aGlzLm1hcC5pbml0KCk7XG4gICAgICAgIH1cblxuICAgIH07XG5cbn0pKGRvY3VtZW50LmJvZHkpOyIsInZhciBhcHAgPSBhcHAgfHwge307XG5cbihmdW5jdGlvbihib2R5KXtcbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgIGFwcC5tYXAgPSB7XG4gICAgICAgIFxuICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGFsZXJ0KFwibWFwXCIpO1xuICAgICAgICB9XG5cbiAgICB9O1xuXG59KShkb2N1bWVudC5ib2R5KTsiLCI7KGZ1bmN0aW9uICgkKSB7XG4gICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICAkLmFwcCA9ICQuYXBwIHx8IHt9O1xuXG4gICAgdmFyIF90aGlzO1xuXG4gICAgJC5hcHAuc2FuZHdpY2ggPSB7XG5cbiAgICAgICAgY29uZmlnOiB7XG4gICAgICAgICAgICBrZXlIb29rczogITEsXG4gICAgICAgICAgICBzZWxlY3RvcjogJy5qcy1zYW5kd2ljaC1tZW51JyxcbiAgICAgICAgICAgIHdyYXBwZXI6ICcubGF5b3V0LXdyYXBwZXInLFxuICAgICAgICAgICAgb3ZlcmxheTogJy5vdmVybGF5J1xuICAgICAgICB9LFxuXG4gICAgICAgIGV4dGVuZDogZnVuY3Rpb24oY29uZmlnKVxuICAgICAgICB7XG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29uZmlnICE9PSAndW5kZWZpbmVkJylcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2YXIgeDtcbiAgICAgICAgICAgICAgICBmb3IgKHggaW4gY29uZmlnKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBfdGhpcy5jb25maWdbeF0gIT09ICd1bmRlZmluZWQnKVxuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuY29uZmlnW3hdID0gY29uZmlnW3hdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBpc09wZW46IGZ1bmN0aW9uKClcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIGJvZHkuaGFzQ2xhc3MoJ3BhZ2UtdmlzaWJsZScpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGhpZGU6IGZ1bmN0aW9uKClcbiAgICAgICAge1xuICAgICAgICAgICAgYm9keS5yZW1vdmVDbGFzcygncGFnZS1vcGVuJyk7XG5cbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBib2R5LnJlbW92ZUNsYXNzKCdwYWdlLXZpc2libGUnKTtcbiAgICAgICAgICAgIH0sIDEwKTtcblxuICAgICAgICAgICAgJCh0aGlzLmNvbmZpZy5vdmVybGF5KS5jc3Moe1xuICAgICAgICAgICAgICAgICd2aXNpYmlsaXR5JzogJ2hpZGRlbidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHRvZ2dsZTogZnVuY3Rpb24oKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZiAoYm9keS5oYXNDbGFzcygncGFnZS12aXNpYmxlJykpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICBib2R5LnJlbW92ZUNsYXNzKCdwYWdlLXZpc2libGUnKTtcbiAgICAgICAgICAgICAgICB9LCAxMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICBib2R5LmFkZENsYXNzKCdwYWdlLXZpc2libGUnKTtcbiAgICAgICAgICAgICAgICB9LCAxMCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJvZHkudG9nZ2xlQ2xhc3MoJ3BhZ2Utb3BlbicpO1xuXG4gICAgICAgICAgICB2YXIgdmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcblxuICAgICAgICAgICAgaWYgKCFib2R5Lmhhc0NsYXNzKCdwYWdlLW9wZW4nKSlcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5ID0gJ2hpZGRlbidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJChfdGhpcy5jb25maWcub3ZlcmxheSkuY3NzKHtcbiAgICAgICAgICAgICAgICAndmlzaWJpbGl0eSc6IHZpc2liaWxpdHlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNhbmR3aWNoVHJpZ2dlcjogZnVuY3Rpb24oKVxuICAgICAgICB7XG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICAgIGlmIChfdGhpcy5jb25maWcua2V5SG9va3MpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgYm9keS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoZS5rZXlDb2RlID09IDI3ICYmIF90aGlzLmlzT3BlbigpKVxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy50b2dnbGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgYm9keS5vbignY2xpY2snLCBfdGhpcy5jb25maWcuc2VsZWN0b3IsIGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQgPyBlLnByZXZlbnREZWZhdWx0KCkgOiBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgX3RoaXMudG9nZ2xlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICBvdmVybGF5VHJpZ2dlcjogZnVuY3Rpb24oKVxuICAgICAgICB7XG4gICAgICAgICAgICBfdGhpcyA9IHRoaXM7XG5cbiAgICAgICAgICAgIGJvZHkub24oJ2NsaWNrJywgX3RoaXMuY29uZmlnLm92ZXJsYXksIGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgIF90aGlzLmhpZGUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uKGNvbmZpZylcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5leHRlbmQoY29uZmlnKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5zYW5kd2ljaFRyaWdnZXIoKTtcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheVRyaWdnZXIoKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxufSkoalF1ZXJ5KTtcbiAiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gdXBkYXRlQ2FwdGNoYShzZWxlY3Rvcikge1xuICAgIGlmICgkKHNlbGVjdG9yKS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIHNyYyA9ICQoc2VsZWN0b3IpLmF0dHIoJ3NyYycpLnNwbGl0KCc/JylbMF07XG4gICAgICAgICQoc2VsZWN0b3IpLmF0dHIoJ3NyYycsIHNyYyArICc/JyArIE1hdGgucmFuZG9tKCkpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gbG9ja1Njcm9sbChlbGVtZW50KSB7XG4gICAgdmFyIGxvY2tYLCBsb2NrWSwgZXZlbnRzID0gWydzY3JvbGwnLCAnbW91c2V3aGVlbCcsICd0b3VjaG1vdmUnXSwga2V5cyA9IHszNzogMSwgMzg6IDEsIDM5OiAxLCA0MDogMX07XG5cbiAgICBmdW5jdGlvbiBwcmV2ZW50RGVmYXVsdChlKSB7XG4gICAgICAgIGUgPSBlIHx8IHdpbmRvdy5ldmVudDtcbiAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpXG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnJldHVyblZhbHVlID0gZmFsc2U7ICBcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwcmV2ZW50RGVmYXVsdEZvclNjcm9sbEtleXMoZSkge1xuICAgICAgICBpZiAoa2V5c1tlLmtleUNvZGVdKSB7XG4gICAgICAgICAgICBwcmV2ZW50RGVmYXVsdChlKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRpc2FibGVTY3JvbGwoKSB7XG4gICAgICAgIGlmICh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcikgLy8gb2xkZXIgRkZcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Nb3VzZVNjcm9sbCcsIHByZXZlbnREZWZhdWx0LCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5vbndoZWVsID0gcHJldmVudERlZmF1bHQ7IC8vIG1vZGVybiBzdGFuZGFyZFxuICAgICAgICB3aW5kb3cub25tb3VzZXdoZWVsID0gZG9jdW1lbnQub25tb3VzZXdoZWVsID0gcHJldmVudERlZmF1bHQ7IC8vIG9sZGVyIGJyb3dzZXJzLCBJRVxuICAgICAgICB3aW5kb3cub250b3VjaG1vdmUgID0gcHJldmVudERlZmF1bHQ7IC8vIG1vYmlsZVxuICAgICAgICBkb2N1bWVudC5vbmtleWRvd24gID0gcHJldmVudERlZmF1bHRGb3JTY3JvbGxLZXlzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVuYWJsZVNjcm9sbCgpIHtcbiAgICAgICAgaWYgKHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKVxuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ0RPTU1vdXNlU2Nyb2xsJywgcHJldmVudERlZmF1bHQsIGZhbHNlKTtcbiAgICAgICAgd2luZG93Lm9ubW91c2V3aGVlbCA9IGRvY3VtZW50Lm9ubW91c2V3aGVlbCA9IG51bGw7IFxuICAgICAgICB3aW5kb3cub253aGVlbCA9IG51bGw7IFxuICAgICAgICB3aW5kb3cub250b3VjaG1vdmUgPSBudWxsOyAgXG4gICAgICAgIGRvY3VtZW50Lm9ua2V5ZG93biA9IG51bGw7ICBcbiAgICB9XG5cbiAgICAvLyBmdW5jdGlvbiBkaXNhYmxlU2Nyb2xsaW5nKCl7XG4gICAgLy8gICAgIHZhciB4PXdpbmRvdy5zY3JvbGxYO1xuICAgIC8vICAgICB2YXIgeT13aW5kb3cuc2Nyb2xsWTtcbiAgICAvLyAgICAgd2luZG93Lm9uc2Nyb2xsPWZ1bmN0aW9uKCl7d2luZG93LnNjcm9sbFRvKHgsIHkpO307XG4gICAgLy8gfVxuXG4gICAgLy8gZnVuY3Rpb24gZW5hYmxlU2Nyb2xsaW5nKCl7XG4gICAgLy8gICAgIHdpbmRvdy5vbnNjcm9sbD1mdW5jdGlvbigpe307XG4gICAgLy8gfVxuXG4gICAgLy8gZnVuY3Rpb24gZGlzYWJsZV9zY3JvbGwoKSB7XG4gICAgLy8gICAgLi4uXG4gICAgLy8gICAgZG9jdW1lbnQub250b3VjaG1vdmUgPSBmdW5jdGlvbihlKXsgXG4gICAgLy8gICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxuICAgIC8vICAgIH1cbiAgICAvLyB9XG5cbiAgICAvLyBmdW5jdGlvbiBlbmFibGVfc2Nyb2xsKCkge1xuICAgIC8vICAgIC4uLlxuICAgIC8vICAgIGRvY3VtZW50Lm9udG91Y2htb3ZlID0gZnVuY3Rpb24oZSl7IFxuICAgIC8vICAgICAgcmV0dXJuIHRydWU7IFxuICAgIC8vICAgIH1cbiAgICAvLyB9XG5cblxuXG4gICAgLy8gZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGVsZW1lbnQpO1xuXG4gICAgLy8gZS5wcmV2ZW50RGVmYXVsdCA/IGUucHJldmVudERlZmF1bHQoKSA6IGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcblxuICAgIC8vIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAvLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIC8vIH0sIGZhbHNlKTtcblxuICAgIC8vIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZnVuY3Rpb24oZSkge1xuICAgIC8vICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgLy8gfSwgZmFsc2UpO1xuXG4gICAgLy8gbG9ja1ggPSB3aW5kb3cuc2Nyb2xsWDtcbiAgICAvLyBsb2NrWSA9IHdpbmRvdy5zY3JvbGxZO1xuXG4gICAgLy8gZnVuY3Rpb24gbG9ja0l0KCkge1xuICAgIC8vICAgICB3aW5kb3cuc2Nyb2xsVG8obG9ja1gsbG9ja1kpO1xuICAgIC8vICAgICByZXR1cm4gZmFsc2U7XG4gICAgLy8gfVxuXG4gICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixsb2NrSXQsZmFsc2UpXG5cbiAgICAvLyByZXR1cm4ge1xuICAgIC8vICAgICBzdG9wOiBmdW5jdGlvbigpe1xuICAgIC8vICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixsb2NrSXQsZmFsc2UpXG4gICAgLy8gICAgIH1cbiAgICAvLyB9XG59XG5cbi8vIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ29udG91Y2hzdGFydCcsIGZ1bmN0aW9uKGUpIHtcbi8vICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcbi8vIH0sIGZhbHNlKTtcblxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignb250b3VjaG1vdmUnLCBmdW5jdGlvbihlKSB7XG4vLyAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9IFwiYXV0b1wiO1xuLy8gfSwgZmFsc2UpO1xuXG4vLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdvbnRvdWNoc3RhcnQnLCBmdW5jdGlvbihlKSB7ZS5wcmV2ZW50RGVmYXVsdCgpfSwgZmFsc2UpO1xuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignb250b3VjaG1vdmUnLCBmdW5jdGlvbihlKSB7ZS5wcmV2ZW50RGVmYXVsdCgpfSwgZmFsc2UpO1xuXG4vLyB2YXIgbG9ja2VyID0gbG9ja1Njcm9sbCgpOyAvLyBsb2NrcyBzY3JvbGxpbmdcbi8vIGxvY2tlci5zdG9wKCk7ICAvLyB1bmxvY2tzIHNjcm9sbGluZ1xuXG4vLyAkKCcjZWxlbWVudCcpLm9uKCdzY3JvbGwgdG91Y2htb3ZlIG1vdXNld2hlZWwnLCBmdW5jdGlvbihlKXtcbi8vICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuLy8gICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuLy8gICByZXR1cm4gZmFsc2U7XG4vLyB9KVxuXG5cbi8vIHZhciB0cmFwU2Nyb2xsO1xuXG4vLyAoZnVuY3Rpb24oJCl7XG4gIFxuLy8gICB0cmFwU2Nyb2xsID0gZnVuY3Rpb24ob3B0KXtcbiAgICBcbi8vICAgICB2YXIgdHJhcEVsZW1lbnQ7XG4vLyAgICAgdmFyIHNjcm9sbGFibGVEaXN0O1xuLy8gICAgIHZhciB0cmFwQ2xhc3NOYW1lID0gJ3RyYXBTY3JvbGwtZW5hYmxlZCc7XG4vLyAgICAgdmFyIHRyYXBTZWxlY3RvciA9ICcudHJhcFNjcm9sbCc7XG4gICAgXG4vLyAgICAgdmFyIHRyYXBXaGVlbCA9IGZ1bmN0aW9uKGUpe1xuICAgICAgXG4vLyAgICAgICBpZiAoISQoJ2JvZHknKS5oYXNDbGFzcyh0cmFwQ2xhc3NOYW1lKSkge1xuICAgICAgICBcbi8vICAgICAgICAgcmV0dXJuO1xuICAgICAgICBcbi8vICAgICAgIH0gZWxzZSB7ICBcbiAgICAgICAgXG4vLyAgICAgICAgIHZhciBjdXJTY3JvbGxQb3MgPSB0cmFwRWxlbWVudC5zY3JvbGxUb3AoKTtcbi8vICAgICAgICAgdmFyIHdoZWVsRXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7XG4vLyAgICAgICAgIHZhciBkWSA9IHdoZWVsRXZlbnQuZGVsdGFZO1xuXG4vLyAgICAgICAgIC8vIG9ubHkgdHJhcCBldmVudHMgb25jZSB3ZSd2ZSBzY3JvbGxlZCB0byB0aGUgZW5kXG4vLyAgICAgICAgIC8vIG9yIGJlZ2lubmluZ1xuLy8gICAgICAgICBpZiAoKGRZPjAgJiYgY3VyU2Nyb2xsUG9zID49IHNjcm9sbGFibGVEaXN0KSB8fFxuLy8gICAgICAgICAgICAgKGRZPDAgJiYgY3VyU2Nyb2xsUG9zIDw9IDApKSB7XG5cbi8vICAgICAgICAgICBvcHQub25TY3JvbGxFbmQoKTtcbi8vICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgXG4vLyAgICAgICAgIH1cbiAgICAgICAgXG4vLyAgICAgICB9XG4gICAgICBcbi8vICAgICB9XG4gICAgXG4vLyAgICAgJChkb2N1bWVudClcbi8vICAgICAgIC5vbignd2hlZWwnLCB0cmFwV2hlZWwpXG4vLyAgICAgICAub24oJ21vdXNlbGVhdmUnLCB0cmFwU2VsZWN0b3IsIGZ1bmN0aW9uKCl7XG4gICAgICAgIFxuLy8gICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3ModHJhcENsYXNzTmFtZSk7XG4gICAgICBcbi8vICAgICAgIH0pXG4vLyAgICAgICAub24oJ21vdXNlZW50ZXInLCB0cmFwU2VsZWN0b3IsIGZ1bmN0aW9uKCl7ICAgXG4gICAgICBcbi8vICAgICAgICAgdHJhcEVsZW1lbnQgPSAkKHRoaXMpO1xuLy8gICAgICAgICB2YXIgY29udGFpbmVySGVpZ2h0ID0gdHJhcEVsZW1lbnQub3V0ZXJIZWlnaHQoKTtcbi8vICAgICAgICAgdmFyIGNvbnRlbnRIZWlnaHQgPSB0cmFwRWxlbWVudFswXS5zY3JvbGxIZWlnaHQ7IC8vIGhlaWdodCBvZiBzY3JvbGxhYmxlIGNvbnRlbnRcbi8vICAgICAgICAgc2Nyb2xsYWJsZURpc3QgPSBjb250ZW50SGVpZ2h0IC0gY29udGFpbmVySGVpZ2h0O1xuICAgICAgICBcbi8vICAgICAgICAgaWYgKGNvbnRlbnRIZWlnaHQ+Y29udGFpbmVySGVpZ2h0KVxuLy8gICAgICAgICAgICQoJ2JvZHknKS5hZGRDbGFzcyh0cmFwQ2xhc3NOYW1lKTsgXG4gICAgICBcbi8vICAgICAgIH0pOyAgICAgICBcbi8vICAgfVxuLy8gfSkoJCk7XG5cbi8vIHZhciBwcmV2ZW50ZWRDb3VudCA9IDA7XG4vLyB2YXIgc2hvd0V2ZW50UHJldmVudGVkTXNnID0gZnVuY3Rpb24oKXsgIFxuLy8gICAkKCcjbW91c2V3aGVlbC1wcmV2ZW50ZWQnKS5zdG9wKCkuYW5pbWF0ZSh7b3BhY2l0eTogMX0sICdmYXN0Jyk7XG4vLyB9XG4vLyB2YXIgaGlkZUV2ZW50UHJldmVudGVkTXNnID0gZnVuY3Rpb24oKXtcbi8vICAgJCgnI21vdXNld2hlZWwtcHJldmVudGVkJykuc3RvcCgpLmFuaW1hdGUoe29wYWNpdHk6IDB9LCAnZmFzdCcpO1xuLy8gfVxuLy8gdmFyIGFkZFByZXZlbnRlZENvdW50ID0gZnVuY3Rpb24oKXtcbi8vICAgJCgnI3ByZXZlbnRlZC1jb3VudCcpLmh0bWwoJ3ByZXZlbnRlZCA8c21hbGw+eDwvc21hbGw+JyArIHByZXZlbnRlZENvdW50KyspO1xuLy8gfVxuXG4vLyB0cmFwU2Nyb2xsKHsgb25TY3JvbGxFbmQ6IGFkZFByZXZlbnRlZENvdW50IH0pO1xuLy8gJCgnLnRyYXBTY3JvbGwnKVxuLy8gICAub24oJ21vdXNlZW50ZXInLCBzaG93RXZlbnRQcmV2ZW50ZWRNc2cpXG4vLyAgIC5vbignbW91c2VsZWF2ZScsIGhpZGVFdmVudFByZXZlbnRlZE1zZyk7ICAgICAgXG4vLyAkKCdbaWQqPVwicGFyZW50XCJdJykuc2Nyb2xsVG9wKDEwMCk7XG5cbnZhciBpc0pzb24gPSBmdW5jdGlvbihpdGVtKSB7XG4gICAgaXRlbSA9IHR5cGVvZiBpdGVtICE9PSBcInN0cmluZ1wiID8gSlNPTi5zdHJpbmdpZnkoaXRlbSkgOiBpdGVtO1xuXG4gICAgdHJ5IHtcbiAgICAgICAgaXRlbSA9IEpTT04ucGFyc2UoaXRlbSk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGl0ZW0gPT09IFwib2JqZWN0XCIgJiYgaXRlbSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59XG5cblN0cmluZy5wcm90b3R5cGUudG9ISE1NU1MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlY19udW0gPSBwYXJzZUludCh0aGlzLCAxMCk7IC8vIGRvbid0IGZvcmdldCB0aGUgc2Vjb25kIHBhcmFtXG4gICAgdmFyIGhvdXJzICAgPSBNYXRoLmZsb29yKHNlY19udW0gLyAzNjAwKTtcbiAgICB2YXIgbWludXRlcyA9IE1hdGguZmxvb3IoKHNlY19udW0gLSAoaG91cnMgKiAzNjAwKSkgLyA2MCk7XG4gICAgdmFyIHNlY29uZHMgPSBzZWNfbnVtIC0gKGhvdXJzICogMzYwMCkgLSAobWludXRlcyAqIDYwKTtcblxuICAgIGlmIChob3VycyAgIDwgMTApIHtob3VycyAgID0gXCIwXCIraG91cnM7fVxuICAgIGlmIChtaW51dGVzIDwgMTApIHttaW51dGVzID0gXCIwXCIrbWludXRlczt9XG4gICAgaWYgKHNlY29uZHMgPCAxMCkge3NlY29uZHMgPSBcIjBcIitzZWNvbmRzO31cbiAgICByZXR1cm4gaG91cnMrJzonK21pbnV0ZXMrJzonK3NlY29uZHM7XG59XG4iLCIkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICBhcHAuaW5pdCgpO1xufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
